programming liberated von neumann style functional algebra programs conventional programming languages growing enormous stronger inherent defects basic level fat weak primitive word time style inherited common ancestor computer close coupling semantics state transitions division world expressions statements inability effectively powerful combining forms building programs existing lack mathematical properties reasoning alternative functional founded creating deal structured data nonrepetitive nonrecursive hierarchically constructed arguments require complex machinery procedure declarations generally applicable combining high build higher conventional algebra variables range operations transform solve equations unknowns transforms school transformations algebraic laws carried language written chosen power general theorems give detailed behavior termination conditions large classes class computing systems transition rules unlike loosely coupled states occurs major computation cacm august 1978 backus computers models applicative program transformation correctness metacomposition 4 20 29 5 24 26 ca780801 dh february 7 1979 3 13 pm 1024 3077 1051 1102 1132 1390 1486 1549 1706 1826 1878 378 2021 2060 2155 2168 2222 2227 2294 2315 2326 2470 2558 2719 2723 2732 2838 2842 2855 2865 2879 2896 2943 2981 3014 3030 3068 3080 3104 3106 3143 3150 627 106 210 1834 2457  