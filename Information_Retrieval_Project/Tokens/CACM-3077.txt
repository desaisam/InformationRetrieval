can programming be liberated from the von neumann style a functional and its algebra of programs conventional programming languages are growing ever more enormous but not stronger inherent defects at most basic level cause them to be both fat weak their primitive word a time style inherited common ancestor computer close coupling off semantics state transitions division into world expressions statements inability effectively use powerful combining forms for building new programs existing ones lack useful mathematical properties reasoning about an alternative functional is founded on creating deal with structured data often nonrepetitive nonrecursive hierarchically constructed do name arguments require complex machinery procedure declarations become generally applicable combining can high build still higher in possible conventional associated an algebra whose variables range over operations this used transform solve equations unknowns much same way one transforms school these transformations given by algebraic laws carried out language which written chosen only power also associated general theorems give detailed behavior termination conditions large classes class computing systems uses its transition rules unlike these have loosely coupled states occurs per major computation cacm august 1978 backus j computers models applicative program transformation correctness metacomposition 4 20 29 5 24 26 ca780801 dh february 7 1979 3 13 pm 1024 3077 1051 1102 1132 1390 1486 1549 1706 1826 1878 378 2021 2060 2155 2168 2222 2227 2294 2315 2326 2470 2558 2719 2723 2732 2838 2842 2855 2865 2879 2896 2943 2981 3014 3030 3068 3080 3104 3106 3143 3150 627 106 210 1834 2457 