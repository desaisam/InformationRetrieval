a model for type checking most current programming languages treat computation over different classes of objects e g numbers strings labels and functions for correct compilation execution the following question then arises is a program properly constructed so that its operations operands are compatible the activity answering this usually called type checking this paper attempts to isolate notion presents partial solution problem based on notions abstraction application in particular mapped into an expression within decidable subset lambda calculus which characterizes relations eliminates all other information determination wise correctness or incorrectness resolved by reducing corresponding one two normal forms constant error an in algol 60 made attendant problems faced any discussed cacm november 1972 ledgard h f types models syntax semantics compiler writing language implementation formal definition 4 12 22 5 2 21 23 ca721104 jb january 27 1978 30 pm 2265 