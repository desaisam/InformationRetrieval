automatic generation of efficient lexical processors using finite state techniques the practical application the theory finite state automata to automatically generate lexical processors is dealt with in this tutorial article by use aed rword system developed at m as part 1 this accepts input description multicharacter items or words allowable a language given terms subset regular expressions output processor which reads string characters and combines them into defined each item identified code number together pointer block storage containing character count produced are based on machines machine corresponds unique condition processing at each read changes new transition appropriate actions taken particular has been operation since 1966 generated have compared favorably speed carefully hand coded programs accomplish same task for o mad among many techniques employed independent nature being evaluated if word events substituted these may be described generalized decision making mechanisms upon an ordered sequence allows used range applications outside area however convenient advantages most important consideration in designing automatic generation goal was completely eliminated backup rereading nearly fast would analyze detect errors easy cacm december 1968 johnson w l porter j h ackley s i ross d t compiler nondeterministic parsing plex structure sequential syntactic analysis 3 63 75 4 12 5 22 24 31 ca681201 jb february 21 1978 2 19 pm 1051 1665 1139 1265 1323 1358 1380 1552 1768 1781 1787 1824 1825 1836 1860 1861 1989 2015 2110 2112 2127 2155 2187 2317 2534 2541 2545 2698 2733 2820 3073 3155 763 378 2746 631 799 6 1739 2139 2786 