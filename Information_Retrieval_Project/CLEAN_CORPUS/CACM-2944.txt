shifting garbage collection overhead to compile time this paper discusses techniques which enable automatic storage reclamation overhead be partially shifted compile time the assumes a transaction oriented collection scheme as proposed by deutsch and bobrow the necessary features of are summarized implementing described optimizations requires global flow analysis performed on source program it is shown that at certain actions affect reference counts cells can deduced information used find cancel when code executed those grouped achieve improved efficiency cacm july 1977 barth j m garbage list processing optimization management 3 80 4 12 20 34 ca770708 jb december 28 8 38 am 2855 2944 3106 3112 2833 5 2998 