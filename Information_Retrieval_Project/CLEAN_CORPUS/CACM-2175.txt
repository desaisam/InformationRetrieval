subexpression ordering in the execution of arithmetic expressions an arithmetic expression can often be broken down into its component subexpressions depending on hardware environment which is to executed these evaluated serials parallel or a combination modes this paper shows that execution time minimized only if consideration given ordering in particular should order decreasing memory and processor requirements observation valid for configurations ranging from uniprocessor with an unbuffered main multiprocessor cache buffer if number exceeds available processors then some must postponed a procedure combines this requirement earlier considerations provide optimal sequence cacm july 1971 ramamoorthy c v gonzalez m j processing expressions subexpression computational trees compilers 4 12 32 ca710707 jb february 2 1978 49 pm 1781 2175 1807 1934 1551 5 1613 1886 2413 6 