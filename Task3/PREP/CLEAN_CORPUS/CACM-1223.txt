high speed compilation of efficient object code a three pass compiler with the following properties is briefly described the last two passes scan an intermediate language produced by preceding in essentially reverse order which it was generated so that first only one hasto read bulky problem oriented input double either direction performed allows to remove locally constant expressions and recursively calculable from loops do important part common subexpression recognition optimization such as effective use index registers although not discussed since object code would be most efficient highly machine dependent discussion terms a fortran like technique applicable algebraic languages cacm august 1965 gear c w ca650801 jb march 6 1978 8 45 pm 267 4 1223 1139 1141 1215 1388 1647 1781 1787 1792 364 405 436 438 763 5 224 1807 1945 1947 823 123 196 914 915 917 919 984 989 990 1007 1012 1046 1084 1098 1122 1131 1134 1138 1140 1149 1198 1200 1248 1265 1303 1323 1336 1358 1366 1396 1421 1455 1460 1462 1463 1467 1468 1477 1487 1491 1496 1531 1535 1551 1565 1601 1602 1613 1614 1626 1641 1788 205 249 288 316 381 398 399 11 404 410 463 464 483 3184 3188 584 600 669 680 691 799 