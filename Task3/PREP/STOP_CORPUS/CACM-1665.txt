automatic generation efficient lexical processors finite state techniques practical application theory finite state automata generate lexical processors dealt tutorial article aed rword system developed part 1 accepts input description multicharacter items words allowable language terms subset regular expressions output processor reads string characters combines defined item identified code number pointer block storage character count produced based machines machine corresponds unique condition processing read transition actions operation 1966 generated compared favorably speed carefully hand coded programs accomplish task mad techniques employed independent nature evaluated word events substituted generalized decision making mechanisms ordered sequence range applications area convenient advantages important consideration designing automatic generation goal completely eliminated backup rereading nearly fast analyze detect errors easy cacm december 1968 johnson porter ackley ross compiler nondeterministic parsing plex structure sequential syntactic analysis 3 63 75 4 12 5 22 24 31 ca681201 jb february 21 1978 2 19 pm 1051 1665 1139 1265 1323 1358 1380 1552 1768 1781 1787 1824 1825 1836 1860 1861 1989 2015 2110 2112 2127 2155 2187 2317 2534 2541 2545 2698 2733 2820 3073 3155 763 378 2746 631 799 6 1739 2139 2786  