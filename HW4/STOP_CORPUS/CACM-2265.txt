model type checking programming languages treat computation classes objects numbers strings labels functions correct compilation execution question arises program properly constructed operations operands compatible activity answering called type checking paper attempts isolate notion presents partial solution problem based notions abstraction application mapped expression decidable subset lambda calculus characterizes relations eliminates information determination wise correctness incorrectness resolved reducing normal forms constant error algol 60 made attendant problems faced discussed cacm november 1972 ledgard types models syntax semantics compiler writing language implementation formal definition 4 12 22 5 2 21 23 ca721104 jb january 27 1978 30 pm 2265  